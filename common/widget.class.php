<?php

/**
 * Created by PhpStorm.
 * User: helin16
 * Date: 9/2/17
 * Time: 4:16 PM
 */
use Sunra\PhpSimple\HtmlDomParser;

class sysbox_latest_mei_pian_post_list_widget extends WP_Widget {
    const WIDGET_ID = 'sysbox-latest-mei-pian-post-list-widget';

    public function __construct(){
        parent::__construct(
            'sysbox_latest_mei_pian_post_list_widget',
            __( 'Sysbox - Latest MeiPian Post List Widget', self::WIDGET_ID),
            array(
                'description' => __( 'Sysbox - Latest MeiPian Post List Widget', self::WIDGET_ID ),
                'classname'   => self::WIDGET_ID
            )
        );
    }

    public function widget($args, $instance)
    {
        $title = apply_filters( 'widget_title', $instance[ 'title' ] );
        $meipianUrl = apply_filters( 'widget_title', $instance[ 'meipianUrl' ] );
        $noToShow = apply_filters( 'widget_title', $instance[ 'noToShow' ] );
        $meipianLoadingDiv = '<div class="loading-div"><i class="fa fa-refresh fa-spin fa-3x fa-fw"></i></div>';

        $html = $args['before_widget'];
        $html .= $args['before_title'] . $title . $args['after_title'];
        $html .= '<div id="' . self::WIDGET_ID . '_content">';
        $html .= $meipianLoadingDiv;
        $html .= '</div>';
        $html .= $args['after_widget'];

        $html .= '<script>';
            $html .= 'jQuery(document).ready( function(){  ';
                $html .= 'jQuery.ajax({';
                    $html .= 'type: "post", ';
                    $html .= 'dataType: "JSON", ';
                    $html .= 'url: "' . admin_url('admin-ajax.php') . '", ';
                    $html .= 'data: { action: "sysbox_meipian_getPostList", url: "' . $meipianUrl . '", maxNo: "' . intval($noToShow) . '"}, ';
                    $html .= 'success: function(response) {';
                        $html .= 'jQuery("#' . self::WIDGET_ID . '_content").replaceWith(sysbox_latest_mei_pian_post_list_widget_getListDom(response));';
                    $html .= '}';
                $html .= '});';
            $html .= '});';
        $html .= '</script>';
        echo $html;
    }

    // Create the admin area widget settings form.
    public function form($instance)
    {
        $title = ! empty( $instance['title'] ) ? $instance['title'] : '';
        $meipianUrl = ! empty( $instance['meipianUrl'] ) ? $instance['meipianUrl'] : '';
        $noToShow = ! empty( $instance['noToShow'] ) ? $instance['noToShow'] : '10';
        $form = '<p>';
        $form .= '<label for="'. $this->get_field_id( 'title' ) . '">';
        $form .=  __( 'Title', 'title' ) . ': ';
        $form .='</label>';
        $form .= '<input type="text" id="' . $this->get_field_id( 'title' ) . '" name="' . $this->get_field_name( 'title' ) . '" value="'. esc_attr( $title ) . '" />';
        $form .= '</p>';

        $form .= '<p>';
        $form .= '<label for="'. $this->get_field_id( 'meipianUrl' ) . '">';
        $form .=  __( 'The url to go to your <a href="https://www.meipian.cn/" target="_blank">MeiPian</a> list page.', 'meipianUrl' ) . ': ';
        $form .='</label>';
        $form .= '<input type="text" id="' . $this->get_field_id( 'meipianUrl' ) . '" name="' . $this->get_field_name( 'meipianUrl' ) . '" value="'. esc_attr( $meipianUrl ) . '" />';
        $form .= '</p>';

        $form .= '<p>';
        $form .= '<label for="'. $this->get_field_id( 'noToShow' ) . '">';
        $form .=  __( 'How many of post you want to show?', 'noToShow' ) . ': ';
        $form .='</label>';
        $form .= '<input type="number" id="' . $this->get_field_id( 'noToShow' ) . '" name="' . $this->get_field_name( 'noToShow' ) . '" value="'. esc_attr( $noToShow ) . '" />';
        $form .= '</p>';
        echo $form;
//        return parent::form($instance); // TODO: Change the autogenerated stub
    }

    public function update($new_instance, $old_instance)
    {
        $instance = $old_instance;
        $instance[ 'title' ] = strip_tags( $new_instance[ 'title' ] );
        $instance[ 'meipianUrl' ] = trim( $new_instance[ 'meipianUrl' ] );
        $instance[ 'noToShow' ] = trim( $new_instance[ 'noToShow' ] );
        return $instance;
    }

    public static function getPostList() {
        $result = array();
        $url = trim($_POST['url']);
        $maxNo = trim($_POST['maxNo']);

        //getting the html from the url.
        $html = file_get_contents($url);

//        $dom = HtmlDomParser::file_get_html( $url );
        $dom = HtmlDomParser::str_get_html( $html );
        foreach($dom->find('div.rich_media_content', 0)->find('a') as $index => $article) {
            if ($index >= $maxNo) {
                break;
            }
            //getting the image url.
            $innerDiv = $article->find('div.article-inner', 0);
            $imageThumbUrl = str_replace(');', '', str_replace('background-image:url(', '', str_replace(' ', '', $innerDiv->find('div.list-img', 0)->style)));
            $imageUrl = str_replace('-thumb', '', $imageThumbUrl);

            $title = trim($innerDiv->find('h3.list-title', 0)->innertext);
            $description = trim($innerDiv->find('div.list-description', 0)->innertext);

            $item = array(
                'href' => trim($article->href),
                'imageUrl' => array('thumb' => $imageThumbUrl, 'normal' => $imageUrl),
                'title' => $title,
                'description' => $description,
            );
            $result[] = $item;
        }
        echo json_encode($result);
        wp_die();
    }
}